package network.backend

import error.ServerResponseException
import network.backend.proto.IAuthentication
import request.LoginRequest
import response.ErrorCodes
import response.endpoint.LoginResult
import server.Endpoints

object Authentication : IAuthentication() {
    /**
     * Tries to log in with the given credentials. Failures are thrown.
     *
     * Possible error codes:
     * - [ErrorCodes.Authentication.Login.USER_NOT_FOUND]: If the given [nif] was not found.
     * - [ErrorCodes.Authentication.Login.WRONG_PASSWORD]: If the [password] is not correct.
     *
     * @param nif The NIF of the user to authenticate.
     * @param password The password of the given user.
     *
     * @return If login is successful, the JWT token generated by the server.
     *
     * @throws ServerResponseException If the login could not be completed.
     */
    override suspend fun login(nif: String, password: String): String {
        val result = post<LoginResult>(Endpoints.Authenticate.Login, body = LoginRequest(nif, password))
        return result.token
    }
}
