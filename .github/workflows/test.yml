name: Run tests

on:
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  changes:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read
    outputs:
      server: ${{ steps.filter.outputs.server }}
      app: ${{ steps.filter.outputs.app }}
    steps:
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            server:
              - 'server/**'
              - 'shared/**'
              - '*.gradle.kts'
              - 'gradle.properties'
              - 'gradle/**'
              - '.github/workflows/test.yml'
            app:
              - 'composeApp/**'
              - 'shared/**'
              - '*.gradle.kts'
              - 'gradle.properties'
              - 'gradle/**'
              - '.github/workflows/test.yml'

  test-server:
    name: Run Server tests
    runs-on: ubuntu-latest

    needs: changes
    if:  ${{ needs.changes.outputs.server == 'true' }}

    permissions: write-all

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 17
      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@342dbebe7272035434f9baccc29a816ec6dd2c7b
      - name: Run the Gradle package task
        uses: gradle/gradle-build-action@87a9a15658c426a54dd469d4fc7dc1a73ca9d4a6
        env:
          ENV_TEST_VAR_STR: testing
          ENV_TEST_VAR_INT: 123456
          ENV_TEST_VAR_FLO: 123.456
          ENV_TEST_VAR_BOO: true
          ENV_TEST_VAR_ENUM: VALUE2
        with:
          arguments: :server:check
      - name: Store reports
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: Server Reports
          path: |
            server/build/reports/
            server/build/test-results/

  test-app:
    name: Run App tests
    runs-on: ubuntu-latest

    needs: changes
    if:  ${{ needs.changes.outputs.app == 'true' }}

    strategy:
      matrix:
        api-level: [ 31 ]

    permissions: write-all

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 17
      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@342dbebe7272035434f9baccc29a816ec6dd2c7b

      - name: Enable KVM group perms
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm
      - name: Cache AVD and APKs
        uses: actions/cache@v3
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-${{ matrix.api-level }}
      - name: Create AVD and generate snapshot for caching
        if: steps.avd-cache.outputs.cache-hit != 'true'
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          arch: x86_64
          force-avd-creation: false
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: false
          script: echo "Generated AVD snapshot for caching."

      - name: Run Android tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          arch: x86_64
          force-avd-creation: false
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: true
          script: ./gradlew :composeApp:connectedCheck

      - name: Run the Gradle package task
        uses: gradle/gradle-build-action@87a9a15658c426a54dd469d4fc7dc1a73ca9d4a6
        with:
          arguments: :composeApp:check
      - name: Store reports
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: App Reports
          path: |
            composeApp/build/reports/
            composeApp/build/test-results/
