name: Build and Publish

on:
  push:
    branches:
      - master
  release:
    types:
      - released

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build_and_publish:
    name: Build and Publish to Docker Hub
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@56b90f209b02bf6d1deae490e9ef18b21a389cd4
      - name: Run tests
        uses: gradle/gradle-build-action@87a9a15658c426a54dd469d4fc7dc1a73ca9d4a6
        env:
          ENV_TEST_VAR_STR: testing
          ENV_TEST_VAR_INT: 123456
          ENV_TEST_VAR_FLO: 123.456
          ENV_TEST_VAR_BOO: true
          ENV_TEST_VAR_ENUM: TEST2
        with:
          arguments: :server:check
      - name: Build and publish image
        uses: gradle/gradle-build-action@87a9a15658c426a54dd469d4fc7dc1a73ca9d4a6
        env:
          DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
          DOCKER_HUB_PASSWORD: ${{ secrets.DOCKER_HUB_PASSWORD }}
          IS_PRODUCTION: ${{ github.event_name == 'release' }}
        with:
          arguments: :server:publishImage
  coverage:
    name: Publish coverage reports
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 17
      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@342dbebe7272035434f9baccc29a816ec6dd2c7b
      - name: Run the Gradle package task
        uses: gradle/gradle-build-action@87a9a15658c426a54dd469d4fc7dc1a73ca9d4a6
        env:
          ENV_TEST_VAR_STR: testing
          ENV_TEST_VAR_INT: 123456
          ENV_TEST_VAR_FLO: 123.456
          ENV_TEST_VAR_BOO: true
          ENV_TEST_VAR_ENUM: TEST2
        with:
          arguments: :server:koverXmlReport
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
